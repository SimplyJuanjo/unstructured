import deepl

class DeepLService:
    def __init__(self, auth_key):
        # Set the DeepL API key
        self.translator = deepl.Translator(auth_key)

    def get_deepl_code(self, ms_code):
        lang_dict = {
            "af": None,
            "sq": None,
            "am": None,
            "ar": None,
            "hy": None,
            "as": None,
            "az": None,
            "bn": None,
            "ba": None,
            "eu": None,
            "bs": None,
            "bg": "BG",
            "yue": None,
            "ca": None,
            "lzh": None,
            "zh-Hans": "ZH",
            "zh-Hant": "ZH",
            "hr": None,
            "cs": "CS",
            "da": "DA",
            "prs": None,
            "dv": None,
            "nl": "NL",
            "en": "EN-US",
            "et": "ET",
            "fo": None,
            "fj": None,
            "fil": None,
            "fi": "FI",
            "fr": "FR",
            "fr-ca": None,
            "gl": None,
            "ka": None,
            "de": "DE",
            "el": "EL",
            "gu": None,
            "ht": None,
            "he": None,
            "hi": None,
            "mww": None,
            "hu": "HU",
            "is": None,
            "id": "ID",
            "ikt": None,
            "iu": None,
            "iu-Latn": None,
            "ga": None,
            "it": "IT",
            "ja": "JA",
            "kn": None,
            "kk": None,
            "km": None,
            "tlh-Latn": None,
            "tlh-Piqd": None,
            "ko": "KO",
            "ku": None,
            "kmr": None,
            "ky": None,
            "lo": None,
            "lv": "LV",
            "lt": "LT",
            "mk": None,
            "mg": None,
            "ms": None,
            "ml": None,
            "mt": None,
            "mi": None,
            "mr": None,
            "mn-Cyrl": None,
            "mn-Mong": None,
            "my": None,
            "ne": None,
            "nb": "NB",
            "or": None,
            "ps": None,
            "fa": None,
            "pl": "PL",
            "pt": "PT-PT",
            "pt-pt": None,
            "pa": None,
            "otq": None,
            "ro": "RO",
            "ru": "RU",
            "sm": None,
            "sr-Cyrl": None,
            "sr-Latn": None,
            "sk": "SK",
            "sl": "SL",
            "so": None,
            "es": "ES",
            "sw": None,
            "sv": "SV",
            "ty": None,
            "ta": None,
            "tt": None,
            "te": None,
            "th": None,
            "bo": None,
            "ti": None,
            "to": None,
            "tr": "TR",
            "tk": None,
            "uk": "UK",
            "hsb": None,
            "ur": None,
            "ug": None,
            "uz": None,
            "vi": None,
            "cy": None,
            "yua": None,
            "zu": None
        }

        return lang_dict.get(ms_code, None)

    def _translate(self, text, target):
        translated_text = self.translator.translate_text(text, target_lang=target).text
        return translated_text

    def translate_text(self, text):
        chunks = [text[i:i+100000] for i in range(0, len(text), 100000)]
        completed_translation = ""
        for chunk in chunks:
            translated_text = self._translate(chunk, "EN-US")
            completed_translation += translated_text
        return completed_translation